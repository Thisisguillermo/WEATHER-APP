{"version":3,"sources":["js/main.js"],"names":["Loadelements","addElement","geoFindMe","document","body","onload","apiKey","weatherUnits","weatherDisplayLanguage","section","createElement","newContent","createTextNode","appendChild","currentDiv","getElementById","insertBefore","status","querySelector","mapLink","href","textContent","navigator","geolocation","getCurrentPosition","success","position","latitude","coords","longitude","weather","error"],"mappings":";AACA,IAAMA,EAAe,WACjBC,IACAC,KAGJC,SAASC,KAAKC,OAASL,EAGvB,IAAMM,EAAS,mCAETC,EAAe,SAEfC,EAAyB,GAG/B,SAASP,IAECQ,IAAAA,EAAUN,SAASO,cAAc,WAGjCC,EAAaR,SAASS,eAAe,2BAG3CH,EAAQI,YAAYF,GAGdG,IAAAA,EAAaX,SAASY,eAAe,QAC3CZ,SAASC,KAAKY,aAAaP,EAASK,GAGxC,SAASZ,IAECe,IAAAA,EAASd,SAASe,cAAc,WAChCC,EAAUhB,SAASe,cAAc,aAEvCC,EAAQC,KAAO,GACfD,EAAQE,YAAc,GAoCjBC,UAAUC,aAGXN,EAAOI,YAAc,YACrBC,UAAUC,YAAYC,mBAtCjBC,SAAQC,GACPC,IAAAA,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAElCZ,EAAOI,YAAc,GACrBF,EAAQC,KAAgDO,yCAAAA,OAAAA,EAAYE,KAAAA,OAAAA,GACpEV,EAAQE,YAA2BM,aAAAA,OAAAA,EAA0BE,mBAAAA,OAAAA,EAA7D,MAGIC,IAAAA,EAAiEH,uDAAAA,OAAAA,EAAgBE,SAAAA,OAAAA,EAAmBtB,WAAAA,OAAAA,EAAsBD,WAAAA,OAAAA,EAAeE,UAAAA,OAAAA,GACtIsB,OAAAA,GAoBFC,WACLd,EAAOI,YAAc,sCAIrBJ,EAAOI,YAAc","file":"main.8c90cef4.js","sourceRoot":"..","sourcesContent":["// Loading the location(geoFindMe) and normal elements\nconst Loadelements = function () {\n    addElement();\n    geoFindMe()\n}\n\ndocument.body.onload = Loadelements;\n\n// API key needs to be in a separate file or actually handles by the server itself for security reasons. But I'll let it slide this time. https://www.freecodecamp.org/news/how-to-use-environment-variables-in-vanillajs/\nconst apiKey = 'dd7abd123d47b36357eb5e8568f8526f';\n\nconst weatherUnits = 'metric';\n\nconst weatherDisplayLanguage = '';\n\n\nfunction addElement() {\n    // create a new div element\n    const section = document.createElement(\"section\");\n\n    // and give it some content\n    const newContent = document.createTextNode(\"Hi there and greetings!\");\n\n    // add the text node to the newly created div\n    section.appendChild(newContent);\n\n    // add the newly created element and its content into the DOM\n    const currentDiv = document.getElementById(\"div1\");\n    document.body.insertBefore(section, currentDiv);\n}\n\nfunction geoFindMe() {\n\n    const status = document.querySelector('#status');\n    const mapLink = document.querySelector('#map-link');\n\n    mapLink.href = '';\n    mapLink.textContent = '';\n\n    function success(position) {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        status.textContent = '';\n        mapLink.href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;\n        mapLink.textContent = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\n\n\n        let weather = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${weatherUnits}&appid=${apiKey}&lang=${weatherDisplayLanguage}`;\n        return weather;\n\n        console.log(weather + ' weather console check');\n\n        // fetching from openweather api\n        // fetch(weather)\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then(data => {\n        //         console.log(data)\n        //         const { } = data.name\n        //         console.log(data.name);\n        //         console.log(data.sys.country);\n        //     })\n        //     .catch((error) => {\n        //         console.error('Error:', error);\n        //     });\n    }\n\n    function error() {\n        status.textContent = 'Unable to retrieve your location';\n    }\n\n    if (!navigator.geolocation) {\n        status.textContent = 'Geolocation is not supported by your browser';\n    } else {\n        status.textContent = 'Locating…';\n        navigator.geolocation.getCurrentPosition(success, error);\n    }\n}\n\n\n//   document.querySelector('#find-me').addEventListener('click', geoFindMe);\n\n\n"]}